def partition(nums, left, right):
    pivot = nums[left]
    i,j = left, right
    while(i < j):
        while(i<j and nums[j]>=pivot):
            j-=1
        nums[i] = nums[j]
        while(i<j and nums[i]<=pivot):
            i+=1
        nums[j] = nums[i]

    nums[i] = pivot
    return i


def topk_split(nums, k, left, right):
    if (left<right):
        index = partition(nums, left, right)
        if index==k:
            return
        elif index < k:
            topk_split(nums, k, index+1, right)
        else:
            topk_split(nums, k, left, index-1)

def topk_small(nums, k):
    topk_split(nums, k, 0, len(nums)-1)
    return nums[k-1]

arr = [1,3,2,3,0,-19]
k = 3
print(topk_small(arr, k))
print(arr)

#-*- coding = utf-8 -*-
#@Time : 2021/4/19 13:47
#@Author : MQFLLY
#@File : CODE.py
#@Software: PyCharm


